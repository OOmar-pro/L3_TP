Hello - from /home/kage/PluginSublimeText3/rls-linux/reason-language-server
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 1, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"params": {}, "jsonrpc": "2.0", "method": "initialized"}
Read message 
{"params": {"textDocument": {"languageId": "reason", "uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml", "version": 0, "text": "let rec imax e ls = \n  match ls with\n    |[] -> e\n    |h::q -> imax (if(h > e) then h else e) q;;\n\n(* imax (-1) ([1;2;3;4;5;6]) ;; *)\n\nlet rec append l1 l2 = \n  match l1 with\n    |[] -> l2\n    |h::q -> h :: (append q l2);;\n\n(* append ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\nlet rec revappend l1 l2 =\n  match l1 with\n    |[] -> l2\n    |h::q -> revappend q (h::l2);;\n\n(* revappend ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\n\nlet rec dotprod xs ys =\n  let t = (xs, ys) in \n    match t with\n      |(v1, []) -> v1\n      |([], v2) -> v2\n      |([],[]) -> []\n      |(a::b, c::d) -> (dotprod b d) + (a * c);; *)\n\n\nlet rec split_aux n ls l1 l2 =\n  match ls with\n    |[] -> (l1, l2)\n    |h::q -> if(h > n) then split_aux n q l1 (h::l2) else split_aux n q (h::l1) l2;;\n\nsplit_aux 3 ([1;4;6;2;3]) [] [];;\n\n"}}, "jsonrpc": "2.0", "method": "textDocument/didOpen"}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 0, "character": 10}}, "id": 2, "jsonrpc": "2.0", "method": "textDocument/hover"}
[server] Got a method textDocument/hover
[server] processing took 0.0131130218506ms
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 0, "character": 10}}, "id": 3, "jsonrpc": "2.0", "method": "textDocument/documentHighlight"}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0131130218506ms
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 0, "character": 10}, "context": {"includeDeclaration": false}}, "id": 4, "jsonrpc": "2.0", "method": "textDocument/references"}
[server] Got a method textDocument/references
[server] processing took 0.0138282775879ms
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 0, "character": 9}}, "id": 5, "jsonrpc": "2.0", "method": "textDocument/hover"}
[server] Got a method textDocument/hover
[server] processing took 0.0128746032715ms
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 0, "character": 9}}, "id": 6, "jsonrpc": "2.0", "method": "textDocument/documentHighlight"}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "options": {"tabSize": 2, "insertSpaces": true}}, "id": 7, "jsonrpc": "2.0", "method": "textDocument/formatting"}
[server] Got a method textDocument/formatting
[server] processing took 0.0128746032715ms
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 0, "character": 10}}, "id": 8, "jsonrpc": "2.0", "method": "textDocument/hover"}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"version": 1, "uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "contentChanges": [{"text": "let rec \nimax e ls = \n  match ls with\n    |[] -> e\n    |h::q -> imax (if(h > e) then h else e) q;;\n\n(* imax (-1) ([1;2;3;4;5;6]) ;; *)\n\nlet rec append l1 l2 = \n  match l1 with\n    |[] -> l2\n    |h::q -> h :: (append q l2);;\n\n(* append ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\nlet rec revappend l1 l2 =\n  match l1 with\n    |[] -> l2\n    |h::q -> revappend q (h::l2);;\n\n(* revappend ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\n\nlet rec dotprod xs ys =\n  let t = (xs, ys) in \n    match t with\n      |(v1, []) -> v1\n      |([], v2) -> v2\n      |([],[]) -> []\n      |(a::b, c::d) -> (dotprod b d) + (a * c);; *)\n\n\nlet rec split_aux n ls l1 l2 =\n  match ls with\n    |[] -> (l1, l2)\n    |h::q -> if(h > n) then split_aux n q l1 (h::l2) else split_aux n q (h::l1) l2;;\n\nsplit_aux 3 ([1;4;6;2;3]) [] [];;\n\n"}]}, "jsonrpc": "2.0", "method": "textDocument/didChange"}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 1, "character": 0}}, "id": 9, "jsonrpc": "2.0", "method": "textDocument/documentHighlight"}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.014066696167ms
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"version": 2, "uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "contentChanges": [{"text": "let rec imax e ls = \n  match ls with\n    |[] -> e\n    |h::q -> imax (if(h > e) then h else e) q;;\n\n(* imax (-1) ([1;2;3;4;5;6]) ;; *)\n\nlet rec append l1 l2 = \n  match l1 with\n    |[] -> l2\n    |h::q -> h :: (append q l2);;\n\n(* append ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\nlet rec revappend l1 l2 =\n  match l1 with\n    |[] -> l2\n    |h::q -> revappend q (h::l2);;\n\n(* revappend ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\n\nlet rec dotprod xs ys =\n  let t = (xs, ys) in \n    match t with\n      |(v1, []) -> v1\n      |([], v2) -> v2\n      |([],[]) -> []\n      |(a::b, c::d) -> (dotprod b d) + (a * c);; *)\n\n\nlet rec split_aux n ls l1 l2 =\n  match ls with\n    |[] -> (l1, l2)\n    |h::q -> if(h > n) then split_aux n q l1 (h::l2) else split_aux n q (h::l1) l2;;\n\nsplit_aux 3 ([1;4;6;2;3]) [] [];;\n\n"}]}, "jsonrpc": "2.0", "method": "textDocument/didChange"}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}, "position": {"line": 0, "character": 8}}, "id": 10, "jsonrpc": "2.0", "method": "textDocument/documentHighlight"}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0121593475342ms
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params": {"textDocument": {"uri": "file:///home/kage/L3_TP/S6/PROG/tp1.ml"}}, "jsonrpc": "2.0", "method": "textDocument/didSave"}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"id": 11, "jsonrpc": "2.0", "method": "shutdown"}
