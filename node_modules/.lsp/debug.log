Hello - from /home/kage/PluginSublimeText3/rls-linux/reason-language-server
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 1, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"params":{},"jsonrpc":"2.0","method":"initialized"}
Read message 
{"params":{"textDocument":{"text":"\nlet rec imax e ls = \n  match ls with\n    |[] -> e\n    |h::q -> imax (if(h > e) then h else e) q;;\n\n(* imax (-1) ([1;2;3;4;5;6]) ;; *)\n\nlet rec append l1 l2 = \n  match l1 with\n    |[] -> l2\n    |h::q -> h :: (append q l2);;\n\n(* append ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\nlet rec revappend l1 l2 =\n  match l1 with\n    |[] -> l2\n    |h::q -> revappend q (h::l2);;\n\n(* revappend ([\"a\"; \"b\"]) ([\"c\"; \"d\"]);; *)\n\n(*\nlet rec dotprod xs ys =\n  let t = (xs, ys) in \n    match t with\n      |(v1, []) -> v1\n      |([], v2) -> v2\n      |([],[]) -> 0\n      |(a::b, c::d) -> (a*c) + (dotprod b d);; \n*)\n\nlet rec split_aux n ls l1 l2 =\n  match ls with\n    |[] -> (l1, l2)\n    |h::q -> if(h > n) then split_aux n q l1 (h::l2) else split_aux n q (h::l1) l2;;\n\nlet split n ls = split_aux n ls [] [];;\n\n(* split 3 [1; 2; 3; 5; 6; 4];; *)\n\nlet rec quicksort l =\n  match l with\n  |[] -> []\n  |h :: q -> match (split h  q) with\n                       |([],[]) -> [h]\n                       |(l1,l2) ->  (quicksort  l1) @ h :: [] @ (quicksort l2)\n               ;;\n\nlet a = [1;3;2;5;6;0;4;5;0;48;0;21;2;1;3;1;3;13;1;1];;\nlet a = [1;2;3;5;4];;\nlet b = quicksort a;;\n\nList.length a;;\nList.length b;;\n","languageId":"reason","version":0,"uri":"file:///home/kage/L3_TP/S6/PROG/tp1.ml"}},"jsonrpc":"2.0","method":"textDocument/didOpen"}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"params":null,"jsonrpc":"2.0","id":2,"method":"shutdown"}
Sending response {"id": 2, "jsonrpc": "2.0", "result": null}
Read message 
{"params":null,"jsonrpc":"2.0","method":"exit"}
Got exit! Terminating loop
Finished
