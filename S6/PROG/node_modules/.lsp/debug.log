Hello - from /home/kage/PluginSublimeText3/rls-linux/reason-language-server
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 1, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"params":{},"jsonrpc":"2.0","method":"initialized"}
Read message 
{"params":{"textDocument":{"text":"module ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n","version":0,"languageId":"reason","uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didOpen"}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"method":"textDocument/documentHighlight","jsonrpc":"2.0","id":2,"params":{"position":{"character":0,"line":0},"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params":{"contentChanges":[{"text":"(module ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n"}],"textDocument":{"version":1,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"method":"textDocument/signatureHelp","jsonrpc":"2.0","id":3,"params":{"position":{"character":1,"line":0},"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}}}
[server] Got a method textDocument/signatureHelp
[server] processing took 0.00691413879395ms
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params":{"contentChanges":[{"text":"(*module ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n"}],"textDocument":{"version":2,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n"}],"textDocument":{"version":3,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*"}],"textDocument":{"version":4,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)"}],"textDocument":{"version":5,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\n"}],"textDocument":{"version":7,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\no"}],"textDocument":{"version":8,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"method":"textDocument/completion","jsonrpc":"2.0","id":4,"params":{"position":{"character":1,"line":24},"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}}}
[server] Got a method textDocument/completion
[server] processing took 0.00309944152832ms
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\nop"}],"textDocument":{"version":9,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\nopen"}],"textDocument":{"version":11,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\nopen "}],"textDocument":{"version":12,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\nopen B"}],"textDocument":{"version":13,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"method":"textDocument/completion","jsonrpc":"2.0","id":5,"params":{"position":{"character":6,"line":24},"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}}}
[server] Got a method textDocument/completion
[server] processing took 0.0121593475342ms
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"method":"textDocument/documentHighlight","jsonrpc":"2.0","id":6,"params":{"position":{"character":6,"line":24},"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\nopen Bas"}],"textDocument":{"version":15,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"method":"textDocument/documentHighlight","jsonrpc":"2.0","id":7,"params":{"position":{"character":8,"line":24},"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"params":{"reason":1,"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/willSave"}
Read message 
{"params":{"contentChanges":[{"text":"(*\nmodule ListZipper2 : LIST_ZIPPER = struct\n  type 'a t = 'a list * 'a list\n\n  exception First\n\n  exception Last\n\n  exception Empty\n\n  let create () = ([], [])\n\n  let previous z = match z with [], _ -> raise First | h :: t, l -> (t, h :: l)\n\n  let next z = match z with _, [] -> raise Last | l, h :: t -> (h :: l, t)\n\n  let insert_weird (l, r) a = (l, a :: r) (* what happens?*)\n\n  let insert (l, r) a = (a :: l, r)\n\n  let remove z = match z with _, [] -> raise Empty | l, h :: t -> (l, t)\nend\n*)\n\nopen Base;;"}],"textDocument":{"version":18,"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didChange"}
Read message 
{"params":{"textDocument":{"uri":"file:///home/kage/L3_TP/S6/PROG/test.ml"}},"jsonrpc":"2.0","method":"textDocument/didSave"}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
